{"version":3,"sources":["C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/error/error.component.css","C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/error/error.component.html","C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/error/error.component.ts","C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/forgot-password/forgot-password.component.css","C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/forgot-password/forgot-password.component.html","C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/forgot-password/forgot-password.component.ts","C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/lockscreen/lockscreen.component.css","C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/lockscreen/lockscreen.component.html","C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/lockscreen/lockscreen.component.ts","C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/not-found/not-found.component.css","C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/not-found/not-found.component.html","C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/not-found/not-found.component.ts","C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/sessions.module.ts","C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/sessions.routing.ts","C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/signin/signin.component.css","C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/signin/signin.component.html","C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/signin/signin.component.ts","C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/signup/signup.component.css","C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/signup/signup.component.html","C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/signup/signup.component.ts"],"names":[],"mappings":";;;;;AAAA,2BAA2B,mBAAO,CAAC,wCAAwD;AAC3F;;;AAGA;AACA,cAAc,QAAS;;AAEvB;;;AAGA;AACA,2C;;;;;;;ACXA,gtB;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,gEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;ACP3B,2BAA2B,mBAAO,CAAC,wCAAwD;AAC3F;;;AAGA;AACA,cAAc,QAAS;;AAEvB;;;AAGA;AACA,2C;;;;;;;ACXA,+qD;;;;;;;;;;;;;;;;;;;;ACA6D;AACC;AAM9D;IAIE;IAAgB,CAAC;IAEjB,0CAAQ,GAAR;IACA,CAAC;IACD,6CAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,eAAe,CAAC;IAC1C,CAAC;IAT0B;QAA1B,gEAAS,CAAC,yEAAc,CAAC;kCAAc,yEAAc;gEAAC;IACjC;QAArB,gEAAS,CAAC,oEAAS,CAAC;kCAAe,oEAAS;iEAAC;IAHnC,uBAAuB;QALnC,gEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;;OACW,uBAAuB,CAYnC;IAAD,8BAAC;CAAA;AAZmC;;;;;;;;ACPpC,2BAA2B,mBAAO,CAAC,wCAAwD;AAC3F;;;AAGA;AACA,cAAc,QAAS;;AAEvB;;;AAGA;AACA,2C;;;;;;;ACXA,8vD;;;;;;;;;;;;;;;;;;;;ACA6D;AACC;AAO9D;IAQE;QAJA,mBAAc,GAAG;YACf,QAAQ,EAAE,EAAE;SACb;IAEe,CAAC;IAEjB,sCAAQ,GAAR;IACA,CAAC;IAED,oCAAM,GAAN;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAEjC,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,eAAe,CAAC;IAC1C,CAAC;IAjB0B;QAA1B,gEAAS,CAAC,yEAAc,CAAC;kCAAc,yEAAc;4DAAC;IACjC;QAArB,gEAAS,CAAC,oEAAS,CAAC;kCAAe,oEAAS;6DAAC;IAFnC,mBAAmB;QAL/B,gEAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;;OACW,mBAAmB,CAmB/B;IAAD,0BAAC;CAAA;AAnB+B;;;;;;;;ACRhC,2BAA2B,mBAAO,CAAC,wCAAwD;AAC3F;;;AAGA;AACA,cAAc,QAAS;;AAEvB;;;AAGA;AACA,2C;;;;;;;ACXA,gtB;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,gEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPW;AACM;AACmB;AACnB;AAUnB;AAC4B;AAExD,0FAA0F;AACJ;AACd;AACZ;AACA;AACR;AACgB;AACX;AAoBzD;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAlB1B,+DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,6DAAY;gBACZ,2DAAW;gBACX,mEAAmB;gBACnB,+EAAoB;gBACpB,0EAAe;gBACf,yEAAc;gBACd,wEAAa;gBACb,4EAAiB;gBACjB,wEAAa;gBACb,4EAAiB;gBACjB,gFAAqB;gBACrB,8EAAgB;gBAChB,qEAAY,CAAC,QAAQ,CAAC,0EAAc,CAAC;aACtC;YACD,YAAY,EAAE,CAAC,2GAAuB,EAAE,6FAAmB,EAAE,iFAAe,EAAE,iFAAe,EAAE,0FAAiB,EAAE,+EAAc,CAAC;SAClI,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;ACzC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsF;AACd;AACZ;AACA;AACQ;AACX;AAElD,IAAM,cAAc,GAAW;IACpC;QACE,IAAI,EAAE,EAAE;QACR,QAAQ,EAAE,CAAC;gBACT,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,iFAAe;gBAC1B,IAAI,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE;aAC1B,EAAE;gBACD,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,iFAAe;gBAC1B,IAAI,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE;aAC1B,EAAE;gBACD,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,2GAAuB;gBAClC,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;aACnC,EAAE;gBACD,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,6FAAmB;gBAC9B,IAAI,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE;aAC9B,EAAE;gBACD,IAAI,EAAE,KAAK;gBACX,SAAS,EAAE,yFAAiB;gBAC5B,IAAI,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE;aAC7B,EAAE;gBACD,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,8EAAc;gBACzB,IAAI,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE;aACzB,CAAC;KACH;CACF,CAAC;;;;;;;;ACtCF,2BAA2B,mBAAO,CAAC,wCAAwD;AAC3F;;;AAGA;AACA,cAAc,QAAS;;AAEvB;;;AAGA;AACA,2C;;;;;;;ACXA,4jF;;;;;;;;;;;;;;;;;;;;;;;;ACA6D;AACc;AACP;AAC3B;AAE+C;AACb;AAO3E;IAME,yBACU,WAAkC,EAClC,WAAwB,EACxB,MAAc,EACd,SAAsB;QAHtB,gBAAW,GAAX,WAAW,CAAuB;QAClC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAa;IAAI,CAAC;IAErC,kCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,yDAAS,CAAC;YAC9B,SAAS,EAAE,IAAI,2DAAW,CAAC,EAAE,EAAE,0DAAU,CAAC,QAAQ,CAAC;YACnD,QAAQ,EAAE,IAAI,2DAAW,CAAC,EAAE,EAAE,0DAAU,CAAC,QAAQ,CAAC;YAClD,UAAU,EAAE,IAAI,2DAAW,CAAC,KAAK,CAAC;SACnC,CAAC;IACJ,CAAC;IAED,gCAAM,GAAN;QAAA,iBAuBC;QAtBC,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK;QACxC,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,eAAe,CAAC;QAExC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YACpF,KAAI,CAAC,WAAW,CAAC,IAAI,GAAG,aAAa,CAAC;YACtC,KAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,KAAK,CAAC;YACnC,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAEhB,KAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;gBAE7B,EAAE,EAAC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,GAAG,CAAC,CAAC,CAAC;oBAC9B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBAC7C,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE;oBAChC,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IA1C0B;QAA1B,gEAAS,CAAC,yEAAc,CAAC;kCAAc,yEAAc;wDAAC;IACjC;QAArB,gEAAS,CAAC,oEAAS,CAAC;kCAAe,oEAAS;yDAAC;IAFnC,eAAe;QAL3B,gEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAQuB,sGAAqB;YACrB,yFAAW;YAChB,+DAAM;YACH,sEAAW;OAVrB,eAAe,CA6C3B;IAAD,sBAAC;CAAA;AA7C2B;;;;;;;;ACb5B,2BAA2B,mBAAO,CAAC,wCAAwD;AAC3F;;;AAGA;AACA,cAAc,QAAS,cAAc,2BAA2B,iCAAiC,kCAAkC,wCAAwC,KAAK;;AAEhL;;;AAGA;AACA,2C;;;;;;;ACXA,s0IAAs0I,cAAc,glBAAglB,YAAY,wkBAAwkB,WAAW,yvF;;;;;;;;;;;;;;;;;;;;;;;;;;ACAt8K;AACc;AACP;AAClB;AACT;AAE+C;AACZ;AAO5E;IAcE,yBACU,WAAkC,EAClC,MAAc,EACd,SAAsB,EACtB,eAAgC;QAHhC,gBAAW,GAAX,WAAW,CAAuB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAa;QACtB,oBAAe,GAAf,eAAe,CAAiB;QAd1C,cAAS,GAAG,EAAE,CAAC;QAGf,WAAM,GAAG,EAAE,CAAC;QAGZ,WAAM,GAAG,EAAE,CAAC;IAST,CAAC;IAEJ,kCAAQ,GAAR;QACE,IAAM,QAAQ,GAAG,IAAI,2DAAW,CAAC,EAAE,EAAE,0DAAU,CAAC,QAAQ,CAAC,CAAC;QAC1D,IAAM,eAAe,GAAG,IAAI,2DAAW,CAAC,EAAE,EAAE,gEAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEhF,IAAI,CAAC,UAAU,GAAG,IAAI,yDAAS,CAAC;YAC9B,KAAK,EAAE,IAAI,2DAAW,CAAC,EAAE,EAAE,CAAC,0DAAU,CAAC,QAAQ,EAAE,0DAAU,CAAC,KAAK,CAAC,CAAC;YACnE,QAAQ,EAAE,QAAQ;YAClB,UAAU,EAAE,eAAe;YAC3B,UAAU,EAAE,IAAI,2DAAW,CAAC,EAAE,EAAE,gEAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC7D,YAAY,EAAE,IAAI,2DAAW,CAAC,EAAE,CAAC;YACjC,aAAa,EAAE,IAAI,2DAAW,CAAC,EAAE,CAAC;YAClC,YAAY,EAAE,IAAI,2DAAW,CAAC,EAAE,CAAC;YACjC,UAAU,EAAE,IAAI,2DAAW,CAAC,EAAE,CAAC;YAC/B,SAAS,EAAE,IAAI,2DAAW,CAAC,EAAE,CAAC;YAC9B,gBAAgB,EAAE,IAAI,2DAAW,CAAC,EAAE,EAAE,gEAAgB,CAAC,GAAG,CAAC;YAC3D,gBAAgB,EAAE,IAAI,2DAAW,CAAC,EAAE,EAAE,gEAAgB,CAAC,GAAG,CAAC;YAC3D,iBAAiB,EAAE,IAAI,2DAAW,CAAC,EAAE,EAAE,gEAAgB,CAAC,GAAG,CAAC;YAC5D,iBAAiB,EAAE,IAAI,2DAAW,CAAC,EAAE,EAAE,gEAAgB,CAAC,GAAG,CAAC;YAC5D,gBAAgB,EAAE,IAAI,2DAAW,CAAC,EAAE,CAAC;YACrC,MAAM,EAAE,IAAI,2DAAW,CAAC,EAAE,EAAE,UAAC,OAAoB;gBAC/C,IAAM,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC;gBAC7B,EAAE,EAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACX,MAAM,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE;gBACzB,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC;YACd,CAAC,CAAC;SACH,CAAC;QAEF,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,gCAAM,GAAN;QAAA,iBAyBC;QAxBC,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,eAAe,CAAC;QAExC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YACtD,KAAI,CAAC,WAAW,CAAC,IAAI,GAAG,aAAa,CAAC;YACtC,KAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,KAAK,CAAC;YACnC,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChB,mCAAmC;gBACnC,gDAAgD;gBAChD,WAAW;gBACX,iCAAiC;gBACjC,IAAI;gBAEJ,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,EAAE;oBACzC,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;gBACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE;oBAChC,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAa,GAAb;QAAA,iBAKC;QAJC,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,UAAC,SAAe;YAC5D,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;QACxB,CAAC,CAAC;IACJ,CAAC;IAED,yCAAe,GAAf,UAAgB,CAAC;QACf,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAO,IAAI,cAAO,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,EAA5B,CAA4B,CAAC,CAAC;QACtF,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAChF,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,oCAAU,GAAV;QAAA,iBAIC;QAHC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,MAAW;YAC/E,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC;IACJ,CAAC;IAED,uCAAa,GAAb,UAAe,CAAC;QACd,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,eAAK,IAAI,YAAK,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,EAA1B,CAA0B,CAAC,CAAC;QAC7E,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAC5E,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,oCAAU,GAAV;QAAA,iBAIC;QAHC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,MAAW;YAC7E,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC;IACJ,CAAC;IAED,sCAAY,GAAZ,UAAc,CAAC;QACb,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,EAAzB,CAAyB,CAAC,CAAC;QAC1E,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC5E,CAAC;IAhH0B;QAA1B,gEAAS,CAAC,yEAAc,CAAC;kCAAc,yEAAc;wDAAC;IACjC;QAArB,gEAAS,CAAC,oEAAS,CAAC;kCAAe,oEAAS;yDAAC;IAFnC,eAAe;QAL3B,gEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAgBuB,sGAAqB;YAC1B,+DAAM;YACH,sEAAW;YACL,0FAAe;OAlB/B,eAAe,CAmH3B;IAAD,sBAAC;CAAA;AAnH2B","file":"sessions.module.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/error/error.component.css\n// module id = ../../../../../src/app/views/sessions/error/error.component.css\n// module chunks = sessions.module","module.exports = \"<div class=\\\"page-wrap height-100 default-bg\\\">\\r\\n  <div class=\\\"app-error\\\">\\r\\n    <div class=\\\"fix\\\">\\r\\n      <mat-icon class=\\\"error-icon\\\" color=\\\"warn\\\">warning</mat-icon>\\r\\n      <div class=\\\"error-text\\\">\\r\\n        <h1 class=\\\"error-title\\\">500</h1>\\r\\n        <div class=\\\"error-subtitle\\\">Server Error!</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"error-actions\\\">\\r\\n      <button \\r\\n      mat-raised-button \\r\\n      color=\\\"primary\\\"\\r\\n      class=\\\"mb-1\\\"\\r\\n      [routerLink]=\\\"['/dashboard']\\\">Back to Dashboard</button>\\r\\n      <button \\r\\n      mat-raised-button \\r\\n      color=\\\"warn\\\">Report this Problem</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/error/error.component.html\n// module id = ../../../../../src/app/views/sessions/error/error.component.html\n// module chunks = sessions.module","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.css']\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/error/error.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/forgot-password/forgot-password.component.css\n// module id = ../../../../../src/app/views/sessions/forgot-password/forgot-password.component.css\n// module chunks = sessions.module","module.exports = \"<div class=\\\"page-wrap height-100 mat-bg-primary\\\">\\r\\n  <div class=\\\"session-form-hold\\\">\\r\\n    <mat-progress-bar mode=\\\"determinate\\\" class=\\\"session-progress\\\"></mat-progress-bar>\\r\\n    <mat-card>\\r\\n      <mat-card-content>\\r\\n        <div class=\\\"text-center pb-1\\\">\\r\\n          <img src=\\\"assets/images/header-logo.png\\\" alt=\\\"\\\" class=\\\"mb-05\\\">\\r\\n          <p class=\\\"text-muted m-0\\\">New password will be sent to your email address</p>\\r\\n        </div>\\r\\n        <form #fpForm=\\\"ngForm\\\" (ngSubmit)=\\\"submitEmail()\\\">\\r\\n\\r\\n          <div class=\\\"\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input\\r\\n                matInput\\r\\n                name=\\\"email\\\"\\r\\n                required\\r\\n                [(ngModel)]=\\\"userEmail\\\"\\r\\n                #email=\\\"ngModel\\\"\\r\\n                placeholder=\\\"Email\\\"\\r\\n                value=\\\"\\\">\\r\\n            </mat-form-field>\\r\\n            <small \\r\\n              *ngIf=\\\"email.errors && (email.dirty || email.touched) && (email.errors.required)\\\" \\r\\n              class=\\\"form-error-msg\\\"> Email is required </small>\\r\\n          </div>\\r\\n\\r\\n          <button mat-raised-button class=\\\"mat-primary full-width mb-1\\\" [disabled]=\\\"fpForm.invalid\\\">Submit</button>\\r\\n          <div class=\\\"text-center\\\">\\r\\n            <a [routerLink]=\\\"'/sessions/signin'\\\" class=\\\"mat-primary text-center full-width\\\">Sign in</a>\\r\\n            <span fxFlex></span>\\r\\n            <a [routerLink]=\\\"'/sessions/signup'\\\" class=\\\"mat-primary text-center full-width\\\">Create a new account</a>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/forgot-password/forgot-password.component.html\n// module id = ../../../../../src/app/views/sessions/forgot-password/forgot-password.component.html\n// module chunks = sessions.module","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatProgressBar, MatButton } from '@angular/material';\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.css']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  userEmail;\r\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\r\n  @ViewChild(MatButton) submitButton: MatButton;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  submitEmail() {\r\n    this.submitButton.disabled = true;\r\n    this.progressBar.mode = 'indeterminate';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/forgot-password/forgot-password.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/lockscreen/lockscreen.component.css\n// module id = ../../../../../src/app/views/sessions/lockscreen/lockscreen.component.css\n// module chunks = sessions.module","module.exports = \"<div class=\\\"page-wrap height-100 mat-bg-primary\\\">\\r\\n  <div class=\\\"session-form-hold session-lockscreen\\\">\\r\\n    <mat-progress-bar mode=\\\"determinate\\\" class=\\\"session-progress\\\"></mat-progress-bar>\\r\\n    <mat-card>\\r\\n      <mat-card-content>\\r\\n        <div fxFlex=\\\"column\\\" fxFlexWrap=\\\"wrap\\\">\\r\\n          <div fxFlexWrap=\\\"wrap\\\" class=\\\"lockscreen-user\\\">\\r\\n            <img class=\\\"lockscreen-face\\\" src=\\\"assets/images/face-3.jpg\\\" alt=\\\"\\\">\\r\\n            <h5 class=\\\"m-0 font-normal\\\">John Doe</h5>\\r\\n            <small class=\\\"text-muted\\\">Last seen 1 hour ago</small>\\r\\n          </div>\\r\\n          <form #lockscreenForm=\\\"ngForm\\\" (ngSubmit)=\\\"unlock()\\\">\\r\\n            <div class=\\\"\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\">\\r\\n                <input \\r\\n                  type=\\\"password\\\"\\r\\n                  name=\\\"password\\\"\\r\\n                  required\\r\\n                  matInput\\r\\n                  [(ngModel)]=\\\"lockscreenData.password\\\"\\r\\n                  #password=\\\"ngModel\\\"\\r\\n                  placeholder=\\\"Password\\\">\\r\\n              </mat-form-field>\\r\\n              <small \\r\\n                *ngIf=\\\"password.errors && (password.dirty || password.touched) && (password.errors.required)\\\" \\r\\n                class=\\\"form-error-msg\\\"> Password is required </small>\\r\\n            </div>\\r\\n            \\r\\n            <button mat-raised-button class=\\\"mat-primary full-width mb-05\\\" [disabled]=\\\"lockscreenForm.invalid\\\">Unlock</button>\\r\\n            <button mat-raised-button [routerLink]=\\\"'/sessions/signin'\\\" color=\\\"accent\\\" class=\\\"mat-primary full-width\\\">It's Not Me!</button>\\r\\n          </form>\\r\\n        </div>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/lockscreen/lockscreen.component.html\n// module id = ../../../../../src/app/views/sessions/lockscreen/lockscreen.component.html\n// module chunks = sessions.module","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatProgressBar, MatButton } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-lockscreen',\r\n  templateUrl: './lockscreen.component.html',\r\n  styleUrls: ['./lockscreen.component.css']\r\n})\r\nexport class LockscreenComponent implements OnInit {\r\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\r\n  @ViewChild(MatButton) submitButton: MatButton;\r\n\r\n  lockscreenData = {\r\n    password: ''\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  unlock() {\r\n    console.log(this.lockscreenData);\r\n\r\n    this.submitButton.disabled = true;\r\n    this.progressBar.mode = 'indeterminate';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/lockscreen/lockscreen.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/not-found/not-found.component.css\n// module id = ../../../../../src/app/views/sessions/not-found/not-found.component.css\n// module chunks = sessions.module","module.exports = \"<div class=\\\"page-wrap height-100 default-bg\\\">\\r\\n  <div class=\\\"app-error\\\">\\r\\n    <div class=\\\"fix\\\">\\r\\n      <mat-icon class=\\\"error-icon\\\" color=\\\"warn\\\">error</mat-icon>\\r\\n      <div class=\\\"error-text\\\">\\r\\n        <h1 class=\\\"error-title\\\">404</h1>\\r\\n        <div class=\\\"error-subtitle\\\">Page Not Found!</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"error-actions\\\">\\r\\n      <button \\r\\n      mat-raised-button \\r\\n      color=\\\"primary\\\"\\r\\n      class=\\\"mb-1\\\"\\r\\n      [routerLink]=\\\"['/dashboard']\\\">Back to Dashboard</button>\\r\\n      <button \\r\\n      mat-raised-button \\r\\n      color=\\\"warn\\\">Report this Problem</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/not-found/not-found.component.html\n// module id = ../../../../../src/app/views/sessions/not-found/not-found.component.html\n// module chunks = sessions.module","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/not-found/not-found.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { \r\n  MatProgressBarModule,\r\n  MatButtonModule,\r\n  MatInputModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatIconModule,\r\n  MatSnackBarModule,\r\n  MatAutocompleteModule\r\n } from '@angular/material';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n// import { CommonDirectivesModule } from './sdirectives/common/common-directives.module';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LockscreenComponent } from './lockscreen/lockscreen.component';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { SessionsRoutes } from \"./sessions.routing\";\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { ErrorComponent } from './error/error.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatProgressBarModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n    MatSnackBarModule,\r\n    MatAutocompleteModule,\r\n    FlexLayoutModule,\r\n    RouterModule.forChild(SessionsRoutes)\r\n  ],\r\n  declarations: [ForgotPasswordComponent, LockscreenComponent, SigninComponent, SignupComponent, NotFoundComponent, ErrorComponent]\r\n})\r\nexport class SessionsModule { }\n\n\n// WEBPACK FOOTER //\n// C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/sessions.module.ts","import { Routes } from '@angular/router';\r\n\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LockscreenComponent } from './lockscreen/lockscreen.component';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { ErrorComponent } from './error/error.component';\r\n\r\nexport const SessionsRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [{\r\n      path: 'signup',\r\n      component: SignupComponent,\r\n      data: { title: 'Signup' }\r\n    }, {\r\n      path: 'signin',\r\n      component: SigninComponent,\r\n      data: { title: 'Signin' }\r\n    }, {\r\n      path: 'forgot-password',\r\n      component: ForgotPasswordComponent,\r\n      data: { title: 'Forgot password' }\r\n    }, {\r\n      path: 'lockscreen',\r\n      component: LockscreenComponent,\r\n      data: { title: 'Lockscreen' }\r\n    }, {\r\n      path: '404',\r\n      component: NotFoundComponent,\r\n      data: { title: 'Not Found' }\r\n    }, {\r\n      path: 'error',\r\n      component: ErrorComponent,\r\n      data: { title: 'Error' }\r\n    }]\r\n  }\r\n];\n\n\n// WEBPACK FOOTER //\n// C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/sessions.routing.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/signin/signin.component.css\n// module id = ../../../../../src/app/views/sessions/signin/signin.component.css\n// module chunks = sessions.module","module.exports = \"<div class=\\\"page-wrap height-100 mat-bg-primary\\\">\\r\\n  <div class=\\\"session-form-hold\\\">\\r\\n    <mat-progress-bar mode=\\\"determinate\\\" class=\\\"session-progress\\\"></mat-progress-bar>\\r\\n    <mat-card>\\r\\n      <mat-card-content>\\r\\n        <div class=\\\"text-center pb-1\\\">\\r\\n          <img src=\\\"assets/images/header-logo.png\\\" alt=\\\"\\\" class=\\\"mb-05\\\">\\r\\n          <p class=\\\"text-muted m-0\\\">Sign in to your account</p>\\r\\n        </div>\\r\\n        <form [formGroup]=\\\"signinForm\\\" (ngSubmit)=\\\"signin()\\\">\\r\\n          <div class=\\\"\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input\\r\\n                matInput\\r\\n                type=\\\"email\\\"\\r\\n                name=\\\"useremail\\\"\\r\\n                [formControl]=\\\"signinForm.controls['useremail']\\\"\\r\\n                placeholder=\\\"User Email\\\"\\r\\n                value=\\\"\\\">\\r\\n            </mat-form-field>\\r\\n            <small \\r\\n              *ngIf=\\\"signinForm.controls['useremail'].hasError('required') && signinForm.controls['useremail'].touched\\\" \\r\\n              class=\\\"form-error-msg\\\"> User Email is required </small>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input \\r\\n                type=\\\"password\\\"\\r\\n                name=\\\"password\\\"\\r\\n                matInput\\r\\n                [formControl]=\\\"signinForm.controls['password']\\\"\\r\\n                placeholder=\\\"Password\\\" \\r\\n                value=\\\"\\\">\\r\\n            </mat-form-field>\\r\\n            <small \\r\\n              *ngIf=\\\"signinForm.controls['password'].hasError('required') && signinForm.controls['password'].touched\\\" \\r\\n              class=\\\"form-error-msg\\\"> Password is required </small>\\r\\n          </div>\\r\\n          \\r\\n          <div class=\\\"pb-1\\\">\\r\\n            <mat-checkbox\\r\\n              name=\\\"rememberMe\\\"\\r\\n              [formControl]=\\\"signinForm.controls['rememberMe']\\\"\\r\\n              class=\\\"pb-1\\\">Remember this computer</mat-checkbox>\\r\\n          </div>\\r\\n          \\r\\n          <button mat-raised-button class=\\\"mat-primary full-width mb-1\\\">Sign in</button>\\r\\n          <div class=\\\"text-center\\\">\\r\\n            <a [routerLink]=\\\"'/sessions/forgot-password'\\\" class=\\\"mat-primary text-center full-width\\\">Forgot password</a>\\r\\n            <span fxFlex></span>\\r\\n            <a [routerLink]=\\\"'/sessions/signup'\\\" class=\\\"mat-primary text-center full-width\\\">Create a new account</a>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/signin/signin.component.html\n// module id = ../../../../../src/app/views/sessions/signin/signin.component.html\n// module chunks = sessions.module","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatProgressBar, MatButton, MatSnackBar } from '@angular/material';\r\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../../../shared/services/authentication.service';\r\nimport { UserService } from '../../../shared/services/admin/users.service';\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.css']\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\r\n  @ViewChild(MatButton) submitButton: MatButton;\r\n\r\n  signinForm: FormGroup;\r\n\r\n  constructor(\r\n    private authService: AuthenticationService,\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private _snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.signinForm = new FormGroup({\r\n      useremail: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required),\r\n      rememberMe: new FormControl(false)\r\n    })\r\n  }\r\n\r\n  signin() {\r\n    const signinData = this.signinForm.value\r\n    this.submitButton.disabled = true;\r\n    this.progressBar.mode = 'indeterminate';\r\n\r\n    this.authService.login(signinData.useremail, signinData.password).subscribe((data: any) => {\r\n      this.progressBar.mode = 'determinate';\r\n      this.submitButton.disabled = false;\r\n      if(data.success) {\r\n\r\n        this.userService.setHeader();\r\n\r\n        if(data.user.user_role == '0') {\r\n          this.router.navigate(['/admin/dashboard']);\r\n        } else {\r\n          this.router.navigate(['/']);\r\n        }\r\n      } else {\r\n        this._snackBar.open(data.msg, '', {\r\n          duration: 3000,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/signin/signin.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".page-wrap{\\r\\n    overflow-y: scroll;\\r\\n    -webkit-box-align: start;\\r\\n        -ms-flex-align: start;\\r\\n            align-items: flex-start;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/signup/signup.component.css\n// module id = ../../../../../src/app/views/sessions/signup/signup.component.css\n// module chunks = sessions.module","module.exports = \"<div class=\\\"page-wrap  mat-bg-primary\\\">\\r\\n  <div class=\\\"session-form-hold\\\">\\r\\n    <mat-progress-bar mode=\\\"determinate\\\" class=\\\"session-progress\\\"></mat-progress-bar>\\r\\n    <mat-card>\\r\\n      <mat-card-content>\\r\\n        <div class=\\\"text-center pb-1\\\">\\r\\n          <img src=\\\"assets/images/header-logo.png\\\" alt=\\\"\\\" class=\\\"mb-05\\\">\\r\\n          <p class=\\\"text-muted m-0\\\">Sign up to use our service</p>\\r\\n        </div>\\r\\n        <form [formGroup]=\\\"signupForm\\\"  (ngSubmit)=\\\"signup()\\\">\\r\\n          <div class=\\\"\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input\\r\\n                matInput\\r\\n                type=\\\"email\\\"\\r\\n                name=\\\"email\\\"\\r\\n                [formControl]=\\\"signupForm.controls['email']\\\"\\r\\n                placeholder=\\\"Your Email\\\"\\r\\n                value=\\\"\\\">\\r\\n            </mat-form-field>\\r\\n            <small \\r\\n              *ngIf=\\\"signupForm.controls['email'].hasError('required') && signupForm.controls['email'].touched\\\" \\r\\n              class=\\\"form-error-msg\\\"> Email is required </small>\\r\\n\\r\\n              <small \\r\\n                *ngIf=\\\"signupForm.controls['email'].hasError('email') && signupForm.controls['email'].touched\\\" \\r\\n                class=\\\"form-error-msg\\\"> Invaild email address </small>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input \\r\\n                type=\\\"password\\\"\\r\\n                name=\\\"password\\\"\\r\\n                matInput\\r\\n                [formControl]=\\\"signupForm.controls['password']\\\"\\r\\n                placeholder=\\\"Password\\\" \\r\\n                value=\\\"\\\">\\r\\n            </mat-form-field>\\r\\n            <small \\r\\n              *ngIf=\\\"signupForm.controls['password'].hasError('required') && signupForm.controls['password'].touched\\\" \\r\\n              class=\\\"form-error-msg\\\"> Password is required </small>\\r\\n          </div>\\r\\n          \\r\\n          <div class=\\\"\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input\\r\\n                type=\\\"password\\\"\\r\\n                name=\\\"c_password\\\"\\r\\n                matInput\\r\\n                [formControl]=\\\"signupForm.controls['c_password']\\\"\\r\\n                placeholder=\\\"Confirm Password\\\"\\r\\n                value=\\\"\\\">\\r\\n            </mat-form-field>\\r\\n            <small *ngIf=\\\"signupForm.controls['c_password'].hasError('required') && signupForm.controls['c_password'].touched\\\" class=\\\"form-error-msg\\\">Confirm password is required.</small>\\r\\n            <small *ngIf=\\\"signupForm.controls['c_password'].hasError('equalTo')\\\" class=\\\"form-error-msg\\\">Passwords do not math.</small>\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input \\r\\n              matInput\\r\\n              name=\\\"user_phone\\\"\\r\\n              [formControl]=\\\"signupForm.controls['user_phone']\\\"\\r\\n              placeholder=\\\"Phone number\\\">\\r\\n            </mat-form-field>\\r\\n            <small *ngIf=\\\"signupForm.controls['user_phone'].hasError('phone') && signupForm.controls['user_phone'].touched\\\" class=\\\"form-error-msg\\\"> Invaild phone number </small>\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input \\r\\n              matInput\\r\\n              name=\\\"user_company\\\"\\r\\n              [formControl]=\\\"signupForm.controls['user_company']\\\"\\r\\n              placeholder=\\\"Company\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input \\r\\n              matInput\\r\\n              name=\\\"user_position\\\"\\r\\n              [formControl]=\\\"signupForm.controls['user_position']\\\"\\r\\n              placeholder=\\\"Position\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput placeholder=\\\"Country\\\" aria-label=\\\"Country\\\" [matAutocomplete]=\\\"autoCountry\\\" [formControl]=\\\"signupForm.controls['user_country']\\\" >\\r\\n              <mat-autocomplete #autoCountry=\\\"matAutocomplete\\\" (optionSelected)=\\\"onCountryChange($event)\\\">\\r\\n                <mat-option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.id\\\">\\r\\n                  <span>{{country.name}}</span>\\r\\n                </mat-option>\\r\\n              </mat-autocomplete>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput placeholder=\\\"State\\\" aria-label=\\\"State\\\" [matAutocomplete]=\\\"autoState\\\" [formControl]=\\\"signupForm.controls['user_state']\\\" >\\r\\n              <mat-autocomplete #autoState=\\\"matAutocomplete\\\" (optionSelected)=\\\"onStateChange($event)\\\">\\r\\n                <mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state.id\\\">\\r\\n                  <span>{{state.name}}</span>\\r\\n                </mat-option>\\r\\n              </mat-autocomplete>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input matInput placeholder=\\\"City\\\" aria-label=\\\"City\\\" [matAutocomplete]=\\\"autoCity\\\" [formControl]=\\\"signupForm.controls['user_city']\\\" >\\r\\n              <mat-autocomplete #autoCity=\\\"matAutocomplete\\\" (optionSelected)=\\\"onCityChange($event)\\\">\\r\\n                <mat-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city.id\\\">\\r\\n                  <span>{{city.name}}</span>\\r\\n                </mat-option>\\r\\n              </mat-autocomplete>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input \\r\\n              matInput\\r\\n              name=\\\"user_website_url\\\"\\r\\n              [formControl]=\\\"signupForm.controls['user_website_url']\\\"\\r\\n              placeholder=\\\"Website URL\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input \\r\\n              matInput\\r\\n              name=\\\"user_twitter_url\\\"\\r\\n              [formControl]=\\\"signupForm.controls['user_twitter_url']\\\"\\r\\n              placeholder=\\\"Twitter URL\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input \\r\\n              matInput\\r\\n              name=\\\"user_facebook_url\\\"\\r\\n              [formControl]=\\\"signupForm.controls['user_facebook_url']\\\"\\r\\n              placeholder=\\\"Facebook URL\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input \\r\\n              matInput\\r\\n              name=\\\"user_linkedin_url\\\"\\r\\n              [formControl]=\\\"signupForm.controls['user_linkedin_url']\\\"\\r\\n              placeholder=\\\"Linkedin URL\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div>\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n              <input \\r\\n              matInput\\r\\n              name=\\\"user_referred_by\\\"\\r\\n              [formControl]=\\\"signupForm.controls['user_referred_by']\\\"\\r\\n              placeholder=\\\"Referred By\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          \\r\\n          <div class=\\\"pb-1\\\">\\r\\n            <mat-checkbox\\r\\n              name=\\\"agreed\\\"\\r\\n              [formControl]=\\\"signupForm.controls['agreed']\\\"\\r\\n              class=\\\"pb-1\\\">I have read and agree to the terms of service.</mat-checkbox>\\r\\n\\r\\n              <small \\r\\n                *ngIf=\\\"signupForm.controls['agreed'].hasError('agreed') && signupForm.controls['agreed'].touched\\\" \\r\\n                class=\\\"form-error-msg\\\"> You must agree to the terms and conditions </small>\\r\\n          </div>\\r\\n\\r\\n          <button mat-raised-button class=\\\"mat-primary full-width mb-1\\\" [disabled]=\\\"signupForm.invalid\\\">Sign up</button>\\r\\n          <div class=\\\"text-center\\\">\\r\\n            <a [routerLink]=\\\"'/sessions/signin'\\\" class=\\\"mat-primary text-center full-width\\\">Sign in to existing account</a>\\r\\n          </div>\\r\\n        </form>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/signup/signup.component.html\n// module id = ../../../../../src/app/views/sessions/signup/signup.component.html\n// module chunks = sessions.module","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatProgressBar, MatButton, MatSnackBar } from '@angular/material';\r\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\r\nimport { CustomValidators } from 'ng2-validation';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../../../shared/services/authentication.service';\r\nimport { LocationService } from '../../../shared/services/location.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  @ViewChild(MatProgressBar) progressBar: MatProgressBar;\r\n  @ViewChild(MatButton) submitButton: MatButton;\r\n\r\n  countries = [];\r\n  selectedCountry;\r\n\r\n  states = [];\r\n  selectedState;\r\n\r\n  cities = [];\r\n  selectedCity;\r\n\r\n  signupForm: FormGroup\r\n  constructor(\r\n    private authService: AuthenticationService,\r\n    private router: Router,\r\n    private _snackBar: MatSnackBar,\r\n    private locationService: LocationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const password = new FormControl('', Validators.required);\r\n    const confirmPassword = new FormControl('', CustomValidators.equalTo(password));\r\n\r\n    this.signupForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: password,\r\n      c_password: confirmPassword,\r\n      user_phone: new FormControl('', CustomValidators.phone('BD')),\r\n      user_company: new FormControl(''),\r\n      user_position: new FormControl(''),\r\n      user_country: new FormControl(''),\r\n      user_state: new FormControl(''),\r\n      user_city: new FormControl(''),\r\n      user_website_url: new FormControl('', CustomValidators.url),\r\n      user_twitter_url: new FormControl('', CustomValidators.url),\r\n      user_facebook_url: new FormControl('', CustomValidators.url),\r\n      user_linkedin_url: new FormControl('', CustomValidators.url),\r\n      user_referred_by: new FormControl(''),\r\n      agreed: new FormControl('', (control: FormControl) => {\r\n        const agreed = control.value;\r\n        if(!agreed) {\r\n          return { agreed: true }\r\n        }\r\n        return null;\r\n      })\r\n    })\r\n\r\n    this.loadCountries();\r\n  }\r\n\r\n  signup() {\r\n    const signupData = this.signupForm.value;\r\n    this.submitButton.disabled = true;\r\n    this.progressBar.mode = 'indeterminate';\r\n\r\n    this.authService.signup(signupData).subscribe((data: any) => {\r\n      this.progressBar.mode = 'determinate';\r\n      this.submitButton.disabled = false;\r\n      if(data.success) {\r\n        // if(data.user.user_role == '0') {\r\n        //   this.router.navigate(['/admin/dashboard']);\r\n        // } else {\r\n        //   this.router.navigate(['/']);\r\n        // }\r\n        \r\n        this._snackBar.open(\"Signup success!\", '', {\r\n          duration: 5000,\r\n        });\r\n        this.router.navigate(['/']);\r\n      } else {\r\n        this._snackBar.open(data.msg, '', {\r\n          duration: 3000,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  loadCountries() {\r\n    this.locationService.getCountries().subscribe((countries : any) => {\r\n      this.countries = countries;\r\n      console.log(countries)\r\n    })\r\n  }\r\n\r\n  onCountryChange(e) {\r\n    this.selectedCountry = this.countries.filter(country => country.id == e.option.value);\r\n    this.signupForm.controls['user_country'].setValue(this.selectedCountry[0].name);\r\n    this.loadStates();\r\n  }\r\n\r\n  loadStates() {\r\n    this.locationService.getStates(this.selectedCountry[0].id).subscribe((states: any) => {\r\n      this.states = states;\r\n    })\r\n  }\r\n\r\n  onStateChange (e) {\r\n    this.selectedState = this.states.filter(state => state.id == e.option.value);\r\n    this.signupForm.controls['user_state'].setValue(this.selectedState[0].name);\r\n    this.loadCities();\r\n  }\r\n\r\n  loadCities() {\r\n    this.locationService.getCities(this.selectedState[0].id).subscribe((cities: any) => {\r\n      this.cities = cities;\r\n    })\r\n  }\r\n\r\n  onCityChange (e) {\r\n    this.selectedCity = this.cities.filter(city => city.id == e.option.value);\r\n    this.signupForm.controls['user_city'].setValue(this.selectedCity[0].name);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/dev/Documents/synchaudio/synchaudio_frontend/src/app/views/sessions/signup/signup.component.ts"],"sourceRoot":"webpack:///"}